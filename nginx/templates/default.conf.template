
limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
    listen ${NGINX_PORT};
    listen [::]:${NGINX_PORT};

    server_name ${NGINX_SERVER_NAME};

    location / {
        return 301 https://$host$request_uri;
    }    
}

server {
    listen ${NGINX_SSL_PORT} ssl;
    listen [::]:${NGINX_SSL_PORT} ssl;

    server_name ${NGINX_SERVER_NAME};

    index index.php index.html;
    error_log  /var/log/nginx/default.error.log;
    access_log /var/log/nginx/default.access.log;
    root ${NGINX_ROOT};

    gzip on;
    gzip_vary on;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml image/*;
    gzip_proxied no-cache no-store private expired auth;
    gzip_min_length 1000;

    client_body_timeout 5s;
    client_header_timeout 5s;

    location ~* \.(jpg|jpeg|png|gif|ico|ttf)$ {
        expires 365d;
        add_header Vary Accept-Encoding;
        add_header Cache-Control public;

        ## Send the all shebang in one fell swoop.
        tcp_nodelay off;
        access_log off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    location ~* \.(css|js)$ {
        expires 7d;
        add_header Vary Accept-Encoding;
        add_header Cache-Control public;

        ## Send the all shebang in one fell swoop.
        tcp_nodelay off;
        access_log off;
        log_not_found off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }   

    location / {
        gzip_static on;

        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ ^/index\.php(/|$) {
        include /etc/nginx/default_headers;
        try_files $uri =404;

        fastcgi_pass ${NGINX_PHP_CONTAINER_NAME}:9000;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.(?!well-known).* {
       access_log off;
       log_not_found off;
       deny all;
       root /var/www/certbot;
    }
}
