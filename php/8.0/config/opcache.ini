# See https://www.php.net/manual/en/opcache.configuration.php for all available configuration options.
[opcache]
; Enable or disable opcache during docker build
opcache.enable=${OPCACHE_ENABLE}
opcache.enable_cli=${OPCACHE_ENABLE}

; The default is 64MB, this is set it to 192MB because we generally have Laravel to manage
opcache.memory_consumption=192

opcache.interned_strings_buffer=16

; Controls how many PHP files, at most, can be held in memory at once.
; It's important that your project has LESS FILES than whatever you set this at.
; A general Laravel/Symfony codebase has ~6000 files for example.
; You can run "find . -type f -print | grep php | wc -l" to quickly calculate the number of files in your codebase.
opcache.max_accelerated_files=7963

opcache.max_waster_percentage=20

; Toggle validate timestamps, useful for local development to set this high (1) and set low for production (0)
opcache.validate_timestamps=${OPCACHE_VALIDATE_TIMESTAMPS}

; Seconds between validation. This is ignored if validate_timestamps is set to 1
opcache.revalidate_freq=60

; A faster mechanism for calling the deconstructors in your code at the end of a single request to speed up the response
; and recycle php workers so they're ready for the next incoming request faster. Set it to 1 and turn it on.
opcache.fast_shutdown=1