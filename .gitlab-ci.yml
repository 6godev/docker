stages:
  - mailhog
  - nginx
  - php

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2

image: docker:stable
services:
  - docker:stable-dind

mailhog-latest:
  stage: mailhog
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/mailhog:latest || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/mailhog:latest -t $CI_REGISTRY/6go-srl/docker/mailhog:latest ./mailhog/
    - docker push $CI_REGISTRY/6go-srl/docker/mailhog:latest

nginx-1.19:
  stage: nginx
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/nginx:1.19 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/nginx:1.19 -t $CI_REGISTRY/6go-srl/docker/nginx:1.19 -f ./nginx/1.19/Dockerfile ./nginx
    - docker push $CI_REGISTRY/6go-srl/docker/nginx:1.19

nginx-1.21:
  stage: nginx
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/nginx:1.21 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/nginx:1.21 -t $CI_REGISTRY/6go-srl/docker/nginx:1.21 -f ./nginx/1.21/Dockerfile ./nginx
    - docker push $CI_REGISTRY/6go-srl/docker/nginx:1.21

php-5.6:
  stage: php
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/php:5.6 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/php:5.6 -t $CI_REGISTRY/6go-srl/docker/php:5.6 -f ./php/5.6/Dockerfile ./php
    - docker push $CI_REGISTRY/6go-srl/docker/php:5.6

php-7.4:
  stage: php
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/php:7.4 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/php:7.4 -t $CI_REGISTRY/6go-srl/docker/php:7.4 -f ./php/7.4/Dockerfile ./php
    - docker push $CI_REGISTRY/6go-srl/docker/php:7.4

php-8.1:
  stage: php
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/php:8.1 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/php:8.1 -t $CI_REGISTRY/6go-srl/docker/php:8.1 -f ./php/8.1/Dockerfile ./php
    - docker push $CI_REGISTRY/6go-srl/docker/php:8.1

php-8.2:
  stage: php
  needs: []
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/6go-srl/docker/php:8.2 || true
    - docker build --network host --cache-from $CI_REGISTRY/6go-srl/docker/php:8.2 -t $CI_REGISTRY/6go-srl/docker/php:8.2 -f ./php/8.2/Dockerfile ./php
    - docker push $CI_REGISTRY/6go-srl/docker/php:8.2
